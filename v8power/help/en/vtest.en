vtest [options]

A simple tester of state that can perform various checks that can be boiled
down to either TRUE or FALSE. The result is passed as an ERRORLEVEL. When
the answer is TRUE a zero is returned. If the answer is FALSE, a 1 is returned.
Using an improper syntax and other such errors will return 100.

Tests:

	/f file 	file exists
	/d dir	 	path exists
	/e file or dir	file or directory path exists
	val1 /eq val2	values are equal
	val1 /ne val2	values are not equal
	val1 /ge val2	val1 is greater than or equal to val2
	val1 /le val2	val1 is less than or equal to val2
	val1 /gt val2	val1 is greater than val2
	val1 /lt val2	val1 is less than val2
	string		string is not null
	/n string	string is not null
	/z string	string is null
	/v number	number is valid

Expression operators:

	/c expression	Force a value to be treated as a string and perform a
			case-specific comparison.
	/i expression	Force a value to be treated as a string and perform a
			caseless comparison.
	exp1 /and exp2  Both expressions must be TRUE.
	exp1 /or /exp2  Either expression can be TRUE.
	/not expression Invert the result of an expression.

By default, comparison of values is based on their type. If both values are
a number (represented in decimal or hexadecimal), the comparison will be made
mathematically. Otherwise, an non-case specific alphabetical comparison will
be performed. Using either the /c or /i options will force a text based
comparison regardless of the value's data type.

Examples:

A file named TEST.TXT exists:		vtest /f TEST.TXT
A file named TEST.TXT does not exist:	vtest /not /f TEST.TXT
Either file A.TXT or B.TXT exists:	vtest /f A.TXT /or /f B.TXT
Neither file A.TXT or B.TXT exist:	vtest /not /f A.TXT /and /not /f B.TXT
%1 is a number:				vtest /v %1
%1 is a number from 1 to 10:		vtest /v %1 /and 1 /le %1 /le 10

